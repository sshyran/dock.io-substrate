(function() {var implementors = {};
implementors["core_mods"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core_mods/anchor/trait.Trait.html\" title=\"trait core_mods::anchor::Trait\">Trait</a>&gt; GetPalletVersion for <a class=\"struct\" href=\"core_mods/anchor/struct.Module.html\" title=\"struct core_mods::anchor::Module\">Module</a>&lt;T&gt;","synthetic":false,"types":["core_mods::anchor::Module"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core_mods/attest/trait.Trait.html\" title=\"trait core_mods::attest::Trait\">Trait</a>&gt; GetPalletVersion for <a class=\"struct\" href=\"core_mods/attest/struct.Module.html\" title=\"struct core_mods::attest::Module\">Module</a>&lt;T&gt;","synthetic":false,"types":["core_mods::attest::Module"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core_mods/blob/trait.Trait.html\" title=\"trait core_mods::blob::Trait\">Trait</a>&gt; GetPalletVersion for <a class=\"struct\" href=\"core_mods/blob/struct.Module.html\" title=\"struct core_mods::blob::Module\">Module</a>&lt;T&gt;","synthetic":false,"types":["core_mods::blob::Module"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core_mods/did/trait.Trait.html\" title=\"trait core_mods::did::Trait\">Trait</a>&gt; GetPalletVersion for <a class=\"struct\" href=\"core_mods/did/struct.Module.html\" title=\"struct core_mods::did::Module\">Module</a>&lt;T&gt;","synthetic":false,"types":["core_mods::did::Module"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core_mods/master/trait.Trait.html\" title=\"trait core_mods::master::Trait\">Trait</a>&gt; GetPalletVersion for <a class=\"struct\" href=\"core_mods/master/struct.Module.html\" title=\"struct core_mods::master::Module\">Module</a>&lt;T&gt;","synthetic":false,"types":["core_mods::master::Module"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"core_mods/revoke/trait.Trait.html\" title=\"trait core_mods::revoke::Trait\">Trait</a>&gt; GetPalletVersion for <a class=\"struct\" href=\"core_mods/revoke/struct.Module.html\" title=\"struct core_mods::revoke::Module\">Module</a>&lt;T&gt;","synthetic":false,"types":["core_mods::revoke::Module"]}];
implementors["forked_pallet_democracy"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"forked_pallet_democracy/trait.Trait.html\" title=\"trait forked_pallet_democracy::Trait\">Trait</a>&gt; GetPalletVersion for <a class=\"struct\" href=\"forked_pallet_democracy/struct.Module.html\" title=\"struct forked_pallet_democracy::Module\">Module</a>&lt;T&gt;","synthetic":false,"types":["forked_pallet_democracy::Module"]}];
implementors["poa"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"poa/trait.Trait.html\" title=\"trait poa::Trait\">Trait</a>&gt; GetPalletVersion for <a class=\"struct\" href=\"poa/struct.Module.html\" title=\"struct poa::Module\">Module</a>&lt;T&gt;","synthetic":false,"types":["poa::Module"]}];
implementors["price_feed"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"price_feed/trait.Config.html\" title=\"trait price_feed::Config\">Config</a>&gt; GetPalletVersion for <a class=\"struct\" href=\"price_feed/struct.Module.html\" title=\"struct price_feed::Module\">Module</a>&lt;T&gt;","synthetic":false,"types":["price_feed::Module"]}];
implementors["simple_democracy"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"simple_democracy/trait.Trait.html\" title=\"trait simple_democracy::Trait\">Trait</a>&gt; GetPalletVersion for <a class=\"struct\" href=\"simple_democracy/struct.Module.html\" title=\"struct simple_democracy::Module\">Module</a>&lt;T&gt;","synthetic":false,"types":["simple_democracy::Module"]}];
implementors["token_migration"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"token_migration/trait.Trait.html\" title=\"trait token_migration::Trait\">Trait</a>&gt; GetPalletVersion for <a class=\"struct\" href=\"token_migration/struct.Module.html\" title=\"struct token_migration::Module\">Module</a>&lt;T&gt;","synthetic":false,"types":["token_migration::Module"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()