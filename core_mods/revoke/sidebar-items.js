initSidebarItems({"enum":[["Call","Dispatchable calls."],["Policy","Authorization logic for a registry."],["RevErr","Revocation Error"]],"fn":[["get_weight_for_pauth","Computes weight of the given `PAuth`. Considers the no. and types of signatures and no. of reads. Disregards message size as messages are hashed giving the same output size and hashing itself is very cheap. The extrinsic using it might decide to consider adding some weight proportional to the message size."]],"struct":[["Module",""],["Registry","Metadata about a revocation scope."],["RemoveRegistry","Command to remove an entire registy. Removes all revocations in the registry as well as registry metadata."],["Revoke","Command to create a set of revocations withing a registry. Creation of revocations is idempotent; creating a revocation that already exists is allowed, but has no effect."],["UnRevoke","Command to remove a set of revocations within a registry. Removal of revocations is idempotent; removing a revocation that doesnâ€™t exists is allowed, but has no effect."]],"trait":[["Trait",""]],"type":[["PAuth","Proof of authorization to modify a registry."],["RegistryId","Points to an on-chain revocation registry."],["RevokeId","Points to a revocation which may or may not exist in a registry."]]});